/*
 * FoxyCategoryPage.java
 *
 * Created on June 20, 2006, 6:18 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.foxy.page;


import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.Serializable;
import java.util.ResourceBundle;
import java.util.Locale;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import javax.faces.context.FacesContext;
import javax.faces.context.ExternalContext;
import javax.faces.application.FacesMessage;
import javax.faces.validator.ValidatorException;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpServletRequest;
import com.foxy.bean.FoxySessionData;
import java.util.MissingResourceException;




public class FoxyFileImagePage extends Page implements Serializable{
    private static String MENU_CODE = new String("FOXY");
    private ResourceBundle foxyParam = null;
    private String ordId = null;
    
    //Class constructor
    public  FoxyFileImagePage(){
        super(new String("FileUploadImageForm"));
        this.isAuthorize(MENU_CODE);
        Locale defaultEng = new Locale("en");
        //Always fixed to Eng, else path may have problems
        foxyParam = ResourceBundle.getBundle("Foxy", defaultEng);
        ordId = foxySessionData.getPageParameter();
        //ordId = "061001"; //testing
    }


    public String getOrdId() {
        return ordId;
    }
    

    public String getImgName(){
        return this.ordId + ".jpeg";
    }
    
    
    
    private String getFoxyParam(String key){
        String val = null;
        try {
            val = foxyParam.getString(key);
        } catch ( MissingResourceException e ) {
            //e.printStackTrace();
            System.err.println("Parameter key [" + key + "] not found");
        }finally {
            
        }
        return  val;
    }
    
    
    public String getImageFile() {
        
        if ( this.ordId == null ) {
            System.err.println("No file image found for refno = null");
            return  null;
        }
        
        String filepath = this.getFoxyParam("FileUploadPath");
        
        String filename = this.ordId + ".jpg"; // Filename suggested in browser Save As dialog
        String contentType = "image/jpeg"; // For dialog, try application/x-download
        String infn = filepath +  File.separatorChar + this.ordId + ".jpg";
        
        File f = new File(infn);
        if ( f.exists() == false ) {
            System.err.println("No file found for refno [" + this.ordId + "], could be first time uploading file");
            return null;
        }
        
        try {
            
            //FacesContext fc = FacesContext.getCurrentInstance();
            //(String)application.getAttribute("savedfilename");
            //(String)application.getAttribute("savedfilename");
            this.ctx.getApplication();
            
            HttpServletResponse response = (HttpServletResponse)ctx.getExternalContext().getResponse();
            response.setHeader("Pragma","no-cache"); //HTTP 1.0
            response.setHeader("Cache-Control","no-cache"); //HTTP 1.1
            response.setDateHeader("Expires", 0); //prevents caching at the proxy server
            response.setHeader("Cache-Control", "private"); // HTTP 1.1
            response.setHeader("Cache-Control", "no-store"); // HTTP 1.1
            response.setHeader("Cache-Control", "max-stale=0"); // HTTP 1.1
            //response.setHeader("Content-disposition", "attachment; filename=" + filename);
            
            response.setHeader("Content-disposition", "filename=" + filename);
            
            
            BufferedInputStream input =
                    new BufferedInputStream(new FileInputStream(infn));
            int contentLength = input.available();
            byte[] data = new byte[contentLength];
            input.read(data);
            input.close();
            
            response.setContentLength(data.length);
            response.setContentType(contentType);
            ServletOutputStream out = response.getOutputStream();
            out.write(data);
            ctx.responseComplete();
            input.close();
        }catch (Exception e) {
            e.printStackTrace();
        } finally{
        }
        return null;
    }
}


