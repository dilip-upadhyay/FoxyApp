/*
 * FoxyQuotaPage.java
 *
 * Created on June 20, 2006, 6:18 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.foxy.page;

import com.foxy.bean.FoxySessionData;
import com.foxy.db.HibernateUtil;
import com.foxy.db.Orders;
import com.foxy.db.Parameter;
import com.foxy.db.Quota;
import com.foxy.db.User;
import com.foxy.util.FoxyPagedDataModel;
import com.foxy.util.MD5;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import javax.faces.application.FacesMessage;
import javax.faces.component.UIData;
import javax.faces.model.DataModel;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.io.output.ByteArrayOutputStream;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author eric
 */
public class FoxyQuotaPage extends Page {
    private static String MENU_CODE = new String("1001");
    
    private Integer id = null;
    private Date qtaDate = null;
    private String destCountry = null;
    private String category = null;
    private String qtaYear = null;
    private Double quantity = new Double(0.0);
    private String unit = null;
    private Double price = new Double(0.0);

    
    /** Creates a new instance of FoxyQuotaPage */
    public FoxyQuotaPage() {
        super(MENU_CODE);
        this.isAuthorize(MENU_CODE);

        /* Get session data */
        if (this.foxySessionData == null) {
            this.foxySessionData = (FoxySessionData) getBean("foxySessionData");
        }
        
        /* Set default action */
        if (this.foxySessionData.getAction() == null) {
            this.foxySessionData.setAction("ADD");
        }
        
        /* Retrive data from database if action is enq */
        if (this.foxySessionData.getAction().equals(ENQ)) {
            this.getQuota(this.foxySessionData.getPageParameter());
        }
    }
    
    /**
     *  Retrive data from database based on recordid
     */
    public void getQuota(String recordid) {
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            List result = session.createQuery("from Quota where id = '" +
                    recordid + "'").list();
            tx.commit();
            session.clear();
            for (int i = 0; i < result.size(); i ++) {
                Quota qta = (Quota) result.get(i);
                
                this.setQtaDate(qta.getQtaDate());
                this.setDestCountry(qta.getDestCountry());
                this.setCategory(qta.getCategory());
                this.setQtaYear(qta.getQtaYear());
                this.setQuantity(qta.getQuantity());
                this.setUnit(qta.getUnit());
                this.setPrice(qta.getPrice());
            }
            System.out.println("getting data from database");
        } catch (Exception e) {
            e.printStackTrace();
        }     
    }

    /**
     *  Prepare data for parameter listing 
     */
    public DataModel getQuotaList() {
        Number numofRec = null;        
        int firstrow = foxyTable.getFirst();
        int pagesize = foxyTable.getRows();
        
        if (this.getSearchKey() != null) {
            //this.foxySessionData.setAction(LST);
            try {
                Session session = (Session) HibernateUtil.currentSession();
                Transaction tx= session.beginTransaction();
                List result = session.createQuery("select count(*) as num from Quota as quota where " +
                        "quota.category like '"+ this.getSearchKey().replace('*', '%') + "' ").list();                
                numofRec = Integer.parseInt(result.get(0).toString());
                tx.commit();
            } catch (HibernateException e) {
                e.printStackTrace();
                FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
                ctx.addMessage(null, fmsg);
            } finally {
                HibernateUtil.closeSession();
            }
            
            System.err.println("Total Number of records: [" + numofRec.intValue() + "]");
            numofRec = numofRec == null ? 0 : numofRec.intValue();
        }
        
        try {
            if (this.getSearchKey() != null) {
                Session session = (Session) HibernateUtil.currentSession();
                Transaction tx= session.beginTransaction();
                List result = session.createQuery("from Quota as quota where " +
                        "quota.category like '"+ this.getSearchKey().replace('*', '%') + "' order by category, code").setFirstResult(firstrow).setMaxResults(pagesize).list();
                if (this.foxyListModel != null ) {
                    this.foxyListModel = null;
                }
                System.err.println("Query Results size = [" + result.size() + "] recs");
                foxyListModel = new FoxyPagedDataModel(result, numofRec.intValue(), pagesize);
                tx.commit();
            }
        } catch (HibernateException e) {
            //do something here with the exception
            e.printStackTrace();
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
            ctx.addMessage(null, fmsg);
        } finally {
            HibernateUtil.closeSession();
        }
        return this.foxyListModel;
    }
    
    /**
     *  Save data into database
     */        
    public String save() {
        Quota qta = new Quota();
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            qta.setQtaDate(this.getQtaDate());
            qta.setDestCountry(this.getDestCountry());
            qta.setCategory(this.getCategory());
            qta.setQtaYear(this.getQtaYear());
            qta.setQuantity(this.getQuantity());
            qta.setUnit(this.getUnit());
            qta.setPrice(this.getPrice());
            session.saveOrUpdate(qta);
            tx.commit();
            session.clear();
            HibernateUtil.closeSession();
        } catch (Exception e) {
            e.printStackTrace();
            return ("success");
        }
        this.foxySessionData.setAction(ENQ);
        return ("success");
    }

    /**
     *  Retrive data from database
     */    
    public String enquire() {
        this.foxySessionData.setAction(ENQ);
        if (this.ectx.getRequestParameterMap().containsKey("recordid")) {
            this.foxySessionData.setPageParameter(this.ectx.getRequestParameterMap().get("recordid").toString());
            this.getQuota(this.foxySessionData.getPageParameter());
        }
        return ("success");
    }

    /**
     *  Update database
     */    
    public String update() {
        this.foxySessionData.setAction(ENQ);
        System.out.println("Updating ....");
        return ("success");
    }

    /**
     *  Prepare for update action
     */    
    public String edit() {
        this.foxySessionData.setAction(UPD);
        return ("success");
    }

    /**
     *  Delete from database
     */    
    public String delete() {
        this.foxySessionData.setAction(ENQ);
        return ("success");
    }

    /**
     *  Prepare for listing 
     */    
    public String search() {
        this.foxySessionData.setAction(LST);
        this.foxyTable.setFirst(0);
        return ("success");
    }
    
    /**
     *  Below are geter and seter for foxy parameter
     */    
    //PROPERTY: id
    public Integer getId(){
        return this.id;
    }
    public void setId(Integer newValue) {
        this.id = newValue;
    }
    
    //PROPERTY: qtaDate
    public Date getQtaDate(){
        return this.qtaDate;
    }
    public void setQtaDate(Date newValue) {
        this.qtaDate = newValue;
    }
    
    //PROPERTY: destCountry
    public String getDestCountry(){
        return this.destCountry;
    }
    public void setDestCountry(String newValue) {
        this.destCountry = newValue;
    }
    
    //PROPERTY: category
    public String getCategory(){
        return this.category;
    }
    public void setCategory(String newValue) {
        this.category = newValue;
    }
    
    //PROPERTY: qtaYear
    public String getQtaYear(){
        return this.qtaYear;
    }
    public void setQtaYear(String newValue) {
        this.qtaYear = newValue;
    }
    
    //PROPERTY: quantity
    public Double getQuantity(){
        return this.quantity;
    }
    public void setQuantity(Double newValue) {
        this.quantity = newValue;
    }
    
    //PROPERTY: unit
    public String getUnit(){
        return this.unit;
    }
    public void setUnit(String newValue) {
        this.unit = newValue;
    }

    //PROPERTY: price
    public Double getPrice(){
        return this.price;
    }
    public void setPrice(Double newValue) {
        this.price = newValue;
    }    
}
