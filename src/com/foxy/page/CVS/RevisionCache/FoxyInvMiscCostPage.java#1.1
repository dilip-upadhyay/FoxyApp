/*
 * FoxyInvMiscCostPage.java
 *
 * Created on June 20, 2006, 6:18 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.foxy.page;

import com.foxy.db.OrderSummary;
import java.util.Calendar;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import javax.faces.application.FacesMessage;
import com.foxy.db.InvMiscCost;
import com.foxy.db.Supplier;
import com.foxy.data.FoxyInventoryList;
import com.foxy.db.HibernateUtil;
import com.foxy.bean.FoxySessionData;
import com.foxy.util.FoxyPagedDataModel;
import com.foxy.util.ListData;
import java.io.IOException;
import java.io.Serializable;
import java.util.Iterator;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import javax.faces.model.SelectItem;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.io.output.ByteArrayOutputStream;
import org.hibernate.Hibernate;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.Criteria;
import org.hibernate.criterion.Expression;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Projections;
import org.hibernate.Query;
import org.hibernate.SQLQuery;
import com.foxy.data.InvMovementTable01;



/**
 *
 * @author hcting
 */
public class FoxyInvMiscCostPage extends Page implements Serializable{
    private static String MENU_CODE = new String("FOXY");
    
    private DataModel ListModel;
    private InvMiscCost invMiscCostBean = null;
    private String currentMode = "VIEW";
    private String orderId = null;
    
    
    /** Creates a new instance of Page */
    public FoxyInvMiscCostPage() {
        super(new String("InvMiscCostForm"));
        //System.out.println("Calling constructor now!!!!!!!!!!!!!!");
        try {
            //this.getInvMovementBean();
            this.isAuthorize(MENU_CODE);
            //System.out.println(ctx.getApplication().getViewHandler().toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public String getOrderId() {
        return orderId;
    }
    
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }
    
    
    public String saveAdd() {
        //System.out.println("Save Add ssRefId11   = [" + this.invMovementBean.getSsRefId() +"]" );
        //System.out.println("Save Add ssRefId2222 = [" + this.getSumRefId() +"]" );
        //System.out.println("Save Add ssRefI333 = [" + this.invMovementBean.getQuantity() +"]" );
        try {
            //this.invMovementBean.setSsRefId(Integer.parseInt(this.getSumRefId()));
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            session.save(this.invMiscCostBean);
            tx.commit();
            HibernateUtil.closeSession();
        } catch (Exception e) {
            e.printStackTrace();
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
            ctx.addMessage(null, fmsg);
            e.printStackTrace();
            return null;
        }finally {
            HibernateUtil.closeSession();
        }
        //clear all recordssFs
        this.invMiscCostBean = null;
        super.setSessionObject1(null);
        this.orderId = null;
        
        return null;
    }
    
    
    public String saveUpd() {
        //System.err.println("!!!!!!!!!!!!!!!!!!!Save Upd");
        //System.err.println("Current Mode = " + this.currentMode);
        try {
            //System.err.println("!!!!!!!!!!! -Current SumRefId = " + this.sumRefId);
            //this.invMovementBean.setSsRefId(Integer.parseInt(this.sumRefId));
            Session session = (Session) HibernateUtil.currentSession();
            //System.err.println("Save upde11 = [" +  this.invMovementBean.getInvRefId() + "]");
            //System.err.println("Save upde22 = [" +  this.invMovementBean.getId() + "]");
            //System.err.println("Save upde33 = [" +  this.invMovementBean.getSsRefId() + "]");
            //System.err.println("Session invRefId = " + foxySessionData.getPageParameterLong2());
            Transaction tx= session.beginTransaction();
            session.update(this.invMiscCostBean);
            
            tx.commit();
            HibernateUtil.closeSession();
        } catch (Exception e) {
            e.printStackTrace();
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
            ctx.addMessage(null, fmsg);
            e.printStackTrace();
        }finally {
            HibernateUtil.closeSession();
        }
        //clear all recordssFs
        this.invMiscCostBean = null;
        super.setSessionObject1(null);
        this.orderId = null;
        
        return null;
    }
    
    
    public String delete(){
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            String  qstr  = new String("DELETE InvMiscCost t ");
            qstr = qstr.concat("WHERE t.mcostid  = :pmcostid ");
            Query q = session.createQuery(qstr);
            q.setLong("pmcostid", foxySessionData.getPageParameterLong());
            q.executeUpdate();
            tx.commit();
        } catch (Exception e) {
            e.printStackTrace();
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
            ctx.addMessage(null, fmsg);
            return (null);
        } finally {
            HibernateUtil.closeSession();
        }
        
        return null;
    }
    
}
