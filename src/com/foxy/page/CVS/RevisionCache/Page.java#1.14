/*
 * Page.java
 *
 * Created on June 15, 2006, 8:57 AM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */


package com.foxy.page;

import com.foxy.bean.FoxySessionData;
import java.util.ArrayList;
import java.util.List;
import javax.faces.component.UIData;
import javax.faces.context.ExternalContext;
import javax.faces.event.ActionEvent;
import javax.faces.model.DataModel;
import org.apache.myfaces.custom.datascroller.ScrollerActionEvent;
import org.hibernate.mapping.Map;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import java.lang.reflect.*;


/**
 *
 * @author eric
 */
public class Page {
    public static final String INVALID_SESSION = "invalid_session";
    public static final String ADD = "ADD";
    public static final String DEL = "DELETE";
    public static final String UPD = "UPDATE";
    public static final String ENQ = "ENQUIRY";
    public static final String SCH = "SEARCH";
    public static final String LST = "LIST";
    
    protected DataModel foxyListModel;
    protected UIData foxyTable;
    
    FoxySessionData foxySessionData = null;
    String formName = null;
    FacesContext ctx = null;
    ExternalContext ectx = null;
    String action = null;
    
    protected String searchKey = null;
    protected String searchType = null;
    protected List tableList = new ArrayList();
    
    /** Creates a new instance of Page */
    public Page(){
        try {
            this.ctx = FacesContext.getCurrentInstance();
            this.ectx = ctx.getExternalContext();
            //System.out.println(this.ectx.getRequest().toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public Page(String form) {
        this.formName = form;
        try {
            this.ctx = FacesContext.getCurrentInstance();
            this.ectx = ctx.getExternalContext();
            this.foxySessionData = (FoxySessionData) getBean("foxySessionData");
            this.action = this.getAction();
            //System.out.println("Action : " + this.action);
            //System.out.println(this.ectx.getRequest().toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
        //System.out.println("Action 3: " +                                                                this.action);
    }
    
    
    
    /**
     *
     * Get action from jsp page
     *
     */
    
    public String getAction() {
        /* Action from menu hast the first priority */
        String act = (String) this.ectx.getRequestParameterMap().get("jscook_action");
        if(act != null && act.length() > 23) {
            this.foxySessionData.resetAll();
            if (act.substring(23).startsWith("go_new")) {
                if (act.endsWith("go_newOrder")) {
                    this.foxySessionData.setOrderId(null);
                }
                this.foxySessionData.setAction(ADD);
                return (new String("ADD"));
            } else if (act.substring(23).startsWith("go_enq")) {
                this.foxySessionData.setAction(ENQ);
                return (new String("ENQUIRY"));
            } else if (act.substring(23).startsWith("go_upd")) {
                this.foxySessionData.setAction(UPD);
                return (new String("UPDATE"));
            } else if (act.substring(23).startsWith("go_del")) {
                this.foxySessionData.setAction(DEL);
                return (new String("DELETE"));
            } else if (act.substring(23).startsWith("go_sch")) {
                this.foxySessionData.setAction(SCH);
                return (new String("SEARCH"));
            } else if (act.substring(23).startsWith("go_lst")) {
                this.foxySessionData.setAction(LST);
                return (new String("LIST"));
                
/*            } else if (this.ectx.getRequestParameterMap().containsKey("action")) {
                System.out.println(this.ectx.getRequestParameterMap().get("action").toString());
                return(this.ectx.getRequestParameterMap().get("action").toString());
            } else if (this.getAction().length() > 0){
                return(this.getAction());*/
            } else {
                return (this.action);
            }
        } else {
            /* If action if not from menu, check submited action */
            /* Parameter action has the second priority */
            if (this.ectx.getRequestParameterMap().containsKey("action")) {
                if (this.ectx.getRequestParameterMap().get("action").toString() != null &&
                        this.ectx.getRequestParameterMap().get("action").toString().length() > 0) {
                    System.out.println("[" + this.ectx.getRequestParameterMap().get("action").toString() + "]");
                    return(this.ectx.getRequestParameterMap().get("action").toString());
                }
            }
            
            /* Parameter action has the third priority */
            if (this.foxySessionData.getAction() != null) {
                return this.foxySessionData.getAction();
            } else {
                return null;
            }
            
            /* Form action hast the lowest priority */
            /*if(this.ectx.getRequestParameterMap().containsKey("Add"+ this.formName+ ":action")) {
                System.out.println(this.ectx.getRequestParameterMap().get("Add"+ this.formName+ ":action").toString());
                return(this.ectx.getRequestParameterMap().get("Add"+ this.formName+ ":action").toString());
            } else if (this.ectx.getRequestParameterMap().containsKey("Enq"+ this.formName+ ":action")) {
                System.out.println(this.ectx.getRequestParameterMap().get("Enq"+ this.formName+ ":action").toString());
                return(this.ectx.getRequestParameterMap().get("Enq"+ this.formName+ ":action").toString());
            } else if (this.ectx.getRequestParameterMap().containsKey("Search"+ this.formName+ ":action")) {
                System.out.println(this.ectx.getRequestParameterMap().get("Search"+ this.formName+ ":action").toString());
                return(this.ectx.getRequestParameterMap().get("Search"+ this.formName+ ":action").toString());
            } else if (this.ectx.getRequestParameterMap().containsKey("List"+ this.formName+ ":action")) {
                System.out.println(this.ectx.getRequestParameterMap().get("List"+ this.formName+ ":action").toString());
                return(this.ectx.getRequestParameterMap().get("List"+ this.formName+ ":action").toString());
            } else {
                System.out.println("NULL Action --- NULL Action --- NULL Action --- NULL Action ");*/
            /* Can't get action, return null to fall back to page default view */
            //return null;
            //}
        }
    }
    
    
    
    /**
     *
     * Returns "true" if the current user is associated with this screen
     *
     */
    public void isAuthorize(String menuCode) {
        if(this.ectx.isUserInRole(menuCode)) {
            //System.out.println("a");
        } else {
            try {
                this.ectx.redirect(ectx.getRequestContextPath() + "/app/noAccess.jsf");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    
    
    /**
     *
     *  Get user id
     *
     */
    
    public String getUserId() {
        return(this.ectx.getRemoteUser());
    }
    
    
    protected void addInternalErrorMessage(FacesContext ctx) {
        FacesMessage errMsg =
                new FacesMessage(
                "Internal Error Occured.",
                "The error has been logged, "
                + "please try your request in a minute.");
        this.ctx.addMessage(null, errMsg);
    }
    
    
    
    /**
     *
     *  Scroller action handler
     *
     */
    
    public void scrollerAction(ActionEvent event) {
        ScrollerActionEvent scrollerEvent = (ScrollerActionEvent) event;
        this.ectx.log("scrollerAction: facet: "
                + scrollerEvent.getScrollerfacet()
                + ", pageindex: "
                + scrollerEvent.getPageIndex());
    }
    
    public String sessionCheck() {
        return (INVALID_SESSION);
    }
    
    
    /**
     *
     *  Action Checking Add
     *
     */
    public boolean isAdd(){
        if (this.foxySessionData.getAction() != null &&
                this.foxySessionData.getAction().equals(ADD)) {
            return (true);
        } else {
            return (false);
        }
    }
    
    /**
     *
     *  Action Checking Delete
     *
     */
    public boolean isDelete(){
        if (this.foxySessionData.getAction() != null &&
                this.foxySessionData.getAction().equals(DEL)) {
            return (true);
        } else {
            return (false);
        }
    }
    
    /**
     *
     *  Action Checking Update
     *
     */
    public boolean isUpdate(){
        if (this.foxySessionData.getAction() != null &&
                this.foxySessionData.getAction().equals(UPD)) {
            return (true);
        } else {
            return (false);
        }
    }
    
    
    /**
     *
     *  Action Checking Update / Add
     *
     */
    public boolean isUpdAdd() {
        if (this.foxySessionData.getAction() != null &&
                (this.foxySessionData.getAction().equals(ADD) ||
                this.foxySessionData.getAction().equals(UPD))) {
            return (true);
        } else {
            return (false);
        }
    }
    
    /**
     *
     *  Action Checking Enquiry
     *
     */
    public boolean isEnquiry(){
        if (this.foxySessionData.getAction() != null &&
                this.foxySessionData.getAction().equals(ENQ)) {
            return (true);
        } else {
            return (false);
        }
    }
    
    /**
     *
     *  Action Checking Search
     *
     */
    public boolean isSearch(){
        if (this.foxySessionData.getAction() != null &&
                this.foxySessionData.getAction().equals(SCH)) {
            return (true);
        } else {
            return (false);
        }
    }
    
    /**
     *
     *  Action Checking Listing
     *
     */
    public boolean isList(){
        if (this.foxySessionData.getAction() != null &&
                this.foxySessionData.getAction().equals(LST)) {
            return (true);
        } else {
            return (false);
        }
    }
    
    //PROPERTY: searchKey
    public String getSearchKey(){
        this.searchKey = this.foxySessionData.getSearchKey();
        return this.searchKey;
    }
    
    public void setSearchKey(String newValue) {
        this.searchKey = newValue;
        foxySessionData.setSearchKey(this.searchKey);
    }
    
    //PROPERTY: searchType
    public String getSearchType(){
        this.searchType = this.foxySessionData.getSearchType();
        return this.searchType;
    }
    
    public void setSearchType(String newValue) {
        this.searchType = newValue;
        foxySessionData.setSearchType(this.searchType);
    }
    
    //PROPERTY: searchList
    public List getListData() {
        return tableList;
    }
    
    
    //PROPERTY: foxyTable
    public UIData getFoxyTable(){
        return this.foxyTable;
    }
    
    //PROPERTY: foxyTable
    public void setFoxyTable(UIData newValue) {
        this.foxyTable = newValue;
    }
    
    //PROPERTY: sessionBean
    protected Object getBean(String name) {
        return this.ctx.getApplication().getVariableResolver().resolveVariable(this.ctx, name);
    }
    
    //Method to get request parameter based on key passed in
    protected String getReqParam(String key){
        if (this.ectx.getRequestParameterMap().containsKey(key)) {
            return this.ectx.getRequestParameterMap().get(key).toString();
        } else {
            return null;
        }
    }
    
    
    protected Object getSessionObject1(Class obclass){
        Object obj = null;
        try {
            obj =  this.foxySessionData.getSessObject1();
            if ( obj == null) {
                return null;
            } else if ( obj.getClass() != obclass){
                Class objClass = obj.getClass();
                //System.err.println("Existing session obj1 is [" + objClass.getName() + "] Not as requested [" + obclass.getName() + "]");
                return null;
            }else {
                //System.err.println("Get sessProdSchBean in session bean --OK");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return obj;
    }
    
    
    protected void setSessionObject1(Object obj){
        this.foxySessionData.setSessObject1(obj);
    }
}

