/*
 * FoxyCustomerPage.java
 *
 * Created on June 20, 2006, 6:18 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.foxy.page;

/**
 *
 * @author hcting
 */


import javax.faces.application.FacesMessage;
import com.foxy.db.CustDivision;
import com.foxy.db.CustBrand;
import com.foxy.db.HibernateUtil;
import com.foxy.bean.FoxySessionData;
import com.foxy.util.FoxyPagedDataModel;
import com.foxy.util.ListData;
import java.io.IOException;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import javax.faces.model.SelectItem;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.io.output.ByteArrayOutputStream;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.Criteria;
import org.hibernate.criterion.Expression;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Projections;
import org.hibernate.Query;

/**
 *
 * @author hcting
 */
public class FoxyCustomerDivisionPage extends Page implements Serializable{
    private static String MENU_CODE = new String("FOXY");
    
    private String text;
    private String value1 = null;
    private String value2 = null;
    private String value3 = null;
    
    private List  list1 = null;
    private List  list2 = null;
    private List  list3 = null;
    
    
    private DataModel listModel;
    private CustDivision custDivBean = new CustDivision();
    private CustDivision dbEditCustDivBean = null;
    private List resultList = null;  //List of brand for current custcode
    
    //Ajax variable seems to have problems
    private String custCode;
    
    
    /** Creates a new instance of FoxyCustomerPage */
    public FoxyCustomerDivisionPage() {
        super(new String("CustomerDivisionForm"));
        
        try {
            this.isAuthorize(MENU_CODE);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        System.err.println("Call Ajax4JSF constructor");
        list1 = new ArrayList();
        list1.add(new SelectItem(new String("1"), new String("1 Item 1")));
        list1.add(new SelectItem(new String("2"), new String("2 Item 2")));
        list1.add(new SelectItem(new String("3"), new String("3 Item 3")));
        list1.add(new SelectItem(new String("4"), new String("4 Item 4")));
        
        list2 = new ArrayList();
        list2.add(new SelectItem(new String("21"), new String("Item 21")));
        list2.add(new SelectItem(new String("22"), new String("Item 22")));
        list2.add(new SelectItem(new String("23"), new String("Item 23")));
        list2.add(new SelectItem(new String("24"), new String("Item 24")));
        
        list3 = new ArrayList();
        list3.add(new SelectItem(new String("31"), new String("Item 31")));
        list3.add(new SelectItem(new String("32"), new String("Item 32")));
        list3.add(new SelectItem(new String("33"), new String("Item 33")));
        list3.add(new SelectItem(new String("34"), new String("Item 34")));
        
    }
    
    
    public String saveAdd() {
        System.out.println("Save Add");
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            session.save(custDivBean);
            tx.commit();
        } catch (Exception e) {
            e.printStackTrace();
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
            ctx.addMessage(null, fmsg);
            return null;
        } finally {
            HibernateUtil.closeSession();
        }
        return ("success");
    }
    
    
    public String editCustomerDivision(){
        System.out.println("Call edit cust division");
        return ("editcustomerdivision");
    }
    
    //PROPERTY: dbEditCustDivBean
    public void setDbEditCustDivBean(CustDivision cb) {
        this.dbEditCustDivBean  = cb;
    }
    
    
    public CustDivision getCustDivBean(){
        return custDivBean;
    }
    
    public void setCustDivBean(CustDivision c){
        this.custDivBean = c;
    }
    
    public String getCustCode() {
        return custCode;
    }
    
    public void setCustCode(String custCode) {
        this.custCode = custCode;
    }
    
    
    
    
    
    public String search() {
        this.foxySessionData.setAction(LST);
        foxyTable.setFirst(0);
        return (null);
    }
    
    
    public String onCustCodeChange(){
        
        System.err.println("onCustCodeChange been called!! Custcode = " +  custCode);
        System.err.println("onCustCodeChange been called!! brand code in bean  = " +  custDivBean.getBrandCode());
        System.err.println("onCustCodeChange been called!! Custcode in bean  = " +  custDivBean.getCustCode());
        return ("success");
    }
    
    
    public List getBrandItemsList(){
        List brandList = new ArrayList();
        
        
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            Criteria crit = session.createCriteria(CustBrand.class);
            System.err.println("custCode = " + this.custDivBean.getCustCode());
            crit.add(Expression.eq("custCode", this.custDivBean.getCustCode()));
            resultList = crit.list();
            System.err.println("Result size = " + resultList.size());
            tx.commit();
        } catch (HibernateException e) {
            //do something here with the exception
            e.printStackTrace();
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
            ctx.addMessage(null, fmsg);
        } finally {
            HibernateUtil.closeSession();
        }
        
        brandList.add(new SelectItem(new String(""), new String("                "))); //Always add a null items, event no records
        for (int i = 0; i < this.resultList.size(); i ++) {
            System.out.println(i);
            CustBrand cbrand = (CustBrand) this.resultList.get(i);
            brandList.add(new SelectItem(cbrand.getBrandCode(), cbrand.getBrandCode() + " - " + cbrand.getBrandDesc()));
        }
        
        
        return brandList;
        //return list1;
    }
    
    
    
    public String procVal1(){
        
        this.value2 = "2" + this.value1;
        this.value3 = "3" + this.value1;
        System.err.println("Call proc val 1 val2 = " + this.value2);
        System.err.println("Call proc val 1 val3 = " + this.value3);
        return ("success");
    }
    
    public String getValue1() {
        return value1;
    }
    
    public void setValue1(String value1) {
        this.value1 = value1;
    }
    
    public String getValue2() {
        return value2;
    }
    
    public void setValue2(String value1) {
        this.value2 = value1;
    }
    
    public String getValue3() {
        return value3;
    }
    
    public void setValue3(String value1) {
        this.value3 = value1;
    }
    
    
    public List  getList1(){
        return list1;
    }
    
    
    public List  getList2(){
        return list2;
    }
    
    
    public List  getList3(){
        return list3;
    }
    
    
    public String getText() {
        return text;
    }
    
    public void setText(String text) {
        this.text = text;
    }
    
    
    
}
