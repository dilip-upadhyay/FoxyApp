/*
 * FoxyCustomerDivisionPage.java
 *
 * Created on June 20, 2006, 6:18 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.foxy.page;

/**
 *
 * @author hcting
 */


import javax.faces.application.FacesMessage;
import com.foxy.db.CustDivision;
import com.foxy.db.CustBrand;
import com.foxy.db.HibernateUtil;
import com.foxy.bean.FoxySessionData;
import com.foxy.util.FoxyPagedDataModel;
import com.foxy.util.ListData;
import java.io.IOException;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import javax.faces.model.SelectItem;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.io.output.ByteArrayOutputStream;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.Criteria;
import org.hibernate.criterion.Expression;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Projections;
import org.hibernate.Query;

/**
 *
 * @author hcting
 */
public class FoxyCustomerDivisionPage extends Page implements Serializable{
    private static String MENU_CODE = new String("FOXY");
    
    
    private DataModel listModel;
    private CustDivision custDivBean = null;
    private CustDivision dbEditCustDivBean = null;
    private List resultList = null;  //List of brand for current custcode
    private List brandList = null;
    
    
    /** Creates a new instance of FoxyCustomerAddDivisionPage */
    public FoxyCustomerDivisionPage() {
        super(new String("CustomerDivisionForm"));
        
        try {
            this.isAuthorize(MENU_CODE);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        if ( custDivBean == null){
            custDivBean = new CustDivision();
        }
        
        System.err.println("Call CustomerAddDivision constructor");
    }
    
    
    
    
    public CustDivision getCustDivBean(){
        //System.err.println("===>get bean now");
        return custDivBean;
    }
    
    public void setCustDivBean(CustDivision c){
        //System.err.println("===>set bean now");
        this.custDivBean = c;
    }
    
    
    //PROPERTY: dbEditCustDivBean
    public void setDbEditCustDivBean(CustDivision cb) {
        this.dbEditCustDivBean  = cb;
    }
    
    
    
    public List getBrandItemsList(){
        
        System.err.println("===>get bean list now");
        if ( brandList == null){
            brandList = new ArrayList();
            brandList.add(new SelectItem(new String(""), new String(""))); //Always add a null items, event no records
            
            
            if ( custDivBean.getCustCode() != null) {
                try {
                    Session session = (Session) HibernateUtil.currentSession();
                    Transaction tx= session.beginTransaction();
                    Criteria crit = session.createCriteria(CustBrand.class);
                    System.err.println("custCode = " + this.custDivBean.getCustCode());
                    crit.add(Expression.eq("custCode", this.custDivBean.getCustCode()));
                    resultList = crit.list();
                    System.err.println("Result size = " + resultList.size());
                    tx.commit();
                } catch (HibernateException e) {
                    //do something here with the exception
                    e.printStackTrace();
                    FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
                    ctx.addMessage(null, fmsg);
                } finally {
                    HibernateUtil.closeSession();
                }
                
                
                for (int i = 0; i < this.resultList.size(); i ++) {
                    //System.out.println(i);
                    CustBrand cbrand = (CustBrand) this.resultList.get(i);
                    brandList.add(new SelectItem(cbrand.getBrandCode(), cbrand.getBrandCode() + " - " + cbrand.getBrandDesc()));
                }
            }
        }
        
        return brandList;
        //return list1;
    }
    
    
    
    
    public String saveAdd() {
        System.out.println("Save Add");
        
        if ( custDivBean.getCustCode().length() == 0 || custDivBean.getBrandCode().length() == 0){
            System.out.println("null code detected");
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, "Please specify customer name and brand name",
                    "Both can not be blank");
            ctx.addMessage(null, fmsg);
            return null;
        }
        
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            System.err.println("Brandcode = " + custDivBean.getBrandCode());
            session.save(custDivBean);
            tx.commit();
        } catch (Exception e) {
            e.printStackTrace();
            FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
            ctx.addMessage(null, fmsg);
            return null;
        } finally {
            HibernateUtil.closeSession();
        }
        return ("success");
    }
    
    
    public String editCustomerDivision(){
        System.out.println("Call edit cust division");
        return ("editcustomerdivision");
    }
    
    
    public String search() {
        this.foxySessionData.setAction(LST);
        foxyTable.setFirst(0);
        return (null);
    }
    
    
    public String onCustCodeChange(){
        brandList = null; //Important: force to reload the brand list
        System.err.println("oncustcode change ------------->" + this.getReqParam("custCode"));
        System.err.println("onCustCodeChange been called!! brand code in bean  = " +  custDivBean.getBrandCode());
        System.err.println("onCustCodeChange been called!! Custcode in bean  = " +  custDivBean.getCustCode());
        return ("success");
    }
}
