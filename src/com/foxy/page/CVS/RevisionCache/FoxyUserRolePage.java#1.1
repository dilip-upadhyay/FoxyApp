/*
 * FoxyUserPage.java
 *
 * Created on June 20, 2006, 6:18 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.foxy.page;

import com.foxy.db.HibernateUtil;
import com.foxy.db.User;
import com.foxy.db.MenuTreeList;
import com.foxy.util.FoxyPagedDataModel;
import com.foxy.util.ListData;
import com.foxy.bean.FoxySessionData;
import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.faces.model.SelectItem;
import javax.faces.application.FacesMessage;
import javax.faces.context.ExternalContext;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.io.output.ByteArrayOutputStream;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.Criteria;
import org.hibernate.criterion.Expression;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Projections;
import org.hibernate.Query;



/**
 *
 * @author eric
 */
public class FoxyUserRolePage extends Page implements Serializable{
    private static String MENU_CODE = new String("1001");
    
    private String rePassword = null;
    private List fullMenuList = null;
    private String[] menuCodeSelected;
    
    
    
    /** Creates a new instance of FoxyUserPage */
    public FoxyUserRolePage() {
        super(new String("UserRoleEditForm"));
        this.isAuthorize(MENU_CODE);
        
        menuCodeSelected = new String[2];
        menuCodeSelected[0] = "3202";
        menuCodeSelected[1] = "5010";
        String reqpath = ectx.getRequestContextPath();
        String spath = ectx.getRequestServletPath();
        String pathinfo = ectx.getRequestPathInfo();
        
        //String url = reqpath.equals(null)?"":reqpath;
        /**
         * String url = "";
         * if (reqpath != null)  url = reqpath;
         * if (spath != null)  url = url + spath;
         * if (pathinfo != null) url = url + pathinfo;
         * //url  =  reqpath;
         * //url  = url + spath;
         * //url = url + pathinfo;
         * System.err.println("Calling constructor");
         * System.err.println(reqpath);
         * System.err.println(spath);
         * System.err.println(pathinfo);
         * System.err.println(url);
         * System.err.println("Calling constructor --END");
         */
    }
    
    public String[] getMenuCodeSelected() {
        System.err.println("Call get Menu code selected");
        return menuCodeSelected;
    }
    
    public void setMenuCodeSelected(String[] menuCodeSelected) {
        System.err.println("Call set Menu code selected");
        try {
            if (menuCodeSelected == null ){
                System.err.println("Call set Menu code selected =====null");
            }
            this.menuCodeSelected = menuCodeSelected;
        } catch ( Exception e) {
            e.printStackTrace();
        } finally {
            
        }
    }
    
    
    public String getUserId(){
        return (String)foxySessionData.getPageParameter();
    }
    
    
    
    public String saveUserRole(){
        //Save new user role matrix
        try {
            if ( menuCodeSelected != null){
                for ( int i = 0; i < menuCodeSelected.length; i++){
                    System.err.println("Menu code selected[" + i + "] = " + menuCodeSelected[i]);
                }
            }else {
                
            }
        } catch ( Exception e) {
            e.printStackTrace();
        } finally {
            
        }
        
        //return ("success");
        return null;
    }
    
    
    
    private void compileMenuList(MenuTreeList MenuListArr[], String parentStr){
        if ( MenuListArr.length == 0){
            //System.err.print("Tail found with desc = [" + MenuListArr[0].getMenuName() + "]");
            return;
        }
        
        for ( int i = 0; i < MenuListArr.length; i++) {
            MenuTreeList ls = (MenuTreeList)MenuListArr[i];
            if ( ls.getSubMenus().size() == 0 ) {
                fullMenuList.add(new SelectItem(ls.getMenuCode(), "[" + ls.getMenuCode() + "] " + parentStr + "==>" + ls.getMenuName()));
                System.err.println(parentStr + "====>" + ls.getMenuName() + "] [" + ls.getMenuCode() + "]");
            } else {
                compileMenuList((MenuTreeList[])MenuListArr[i].getSubMenus().toArray(new MenuTreeList[MenuListArr[i].getSubMenus().size()]),
                        parentStr + "==>" + MenuListArr[i].getMenuName());
            }
        }
    }
    
    
    public List getFullMenuList() {
        if ( fullMenuList == null){
            fullMenuList = new ArrayList();
            try {
                Session session = (Session) HibernateUtil.currentSession();
                Transaction tx= session.beginTransaction();
                List result = session.createQuery("from MenuTreeList as ls WHERE ls.menuParent = 0").list();
                tx.commit();
                //Using recursive to compile the full menu list
                compileMenuList((MenuTreeList[])result.toArray(new MenuTreeList[result.size()]), "");
                session.clear();
            } catch (HibernateException e) {
                //do something here with the exception
                e.printStackTrace();
                FacesMessage fmsg  = new FacesMessage(FacesMessage.SEVERITY_ERROR, e.getCause().toString(), e.getMessage());
                ctx.addMessage(null, fmsg);
            } finally {
                HibernateUtil.closeSession();
            }
        }
        
        return this.fullMenuList;
    }
}
