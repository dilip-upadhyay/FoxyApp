/*
 * FoxyMenu.java
 *
 * Created on June 20, 2006, 8:14 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.foxy.util;

import com.foxy.db.HibernateUtil;
import com.foxy.db.Menu;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.List;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;
import javax.faces.model.SelectItem;
import org.apache.myfaces.custom.navmenu.NavigationMenuItem;
import org.hibernate.Session;
import org.hibernate.Transaction;
import javax.servlet.http.HttpServletRequest;
import java.net.URL;

/**
 *
 * @author eric
 */
public class FoxyMenu {
    private NavigationMenuItem[] foxyMenu;
    private NavigationMenuItem childMenu;
    private NavigationMenuItem subMenu;
    private String ClientReqReferer = null;
    
    FacesContext ctx = null;
    ExternalContext ectx = null;
    
    /** Creates a new instance of FoxyMenu */
    public FoxyMenu() {
        int validMenu = 0;
        URL clientUrl = null;
        
        this.ctx = FacesContext.getCurrentInstance();
        this.ectx = ctx.getExternalContext();
        //System.out.println(this.ectx.getRequest().toString());
        //Retrieve referer URL from previous page (foxyMain.jsf in this case --First refer to this page)
        if ( ClientReqReferer == null){
            HttpServletRequest request = (HttpServletRequest)this.ectx.getRequest();
            ClientReqReferer = request.getHeader("referer");
            //System.err.println(ClientReqReferer);
            
            try {
                clientUrl = new URL(ClientReqReferer);
            } catch (MalformedURLException ex) {
                ex.printStackTrace();
            }
            
            if ( clientUrl == null){
                try {
                    clientUrl = new URL("http://localhost/FoxyApp/app/");//Create a dummy obj to avoid nullpointer excpt, also default to https
                    System.out.println("Unexpected referer detected!! [referer URL is NULL], use default to http://localhost instead");
                } catch (MalformedURLException ex) {
                    ex.printStackTrace();
                }//Create a dummy obj to avoid nullpointer excpt, also default to https
            }
            
            /*
            if ( clientUrl != null){
                System.err.println("Protocol = " + clientUrl.getProtocol());
                System.err.println("DefaultPort = " + clientUrl.getDefaultPort());
                System.err.println("File = " + clientUrl.getFile());
                System.err.println("Host = " + clientUrl.getHost());
                System.err.println("Path = " + clientUrl.getPath());
                System.err.println("Port = " + clientUrl.getPort());
                System.err.println("Query = " + clientUrl.getQuery());
                System.err.println("Ref = " + clientUrl.getRef());
                System.err.println("UserInfo = " + clientUrl.getUserInfo());
            }*/
        }
        
        
        foxyMenu = new NavigationMenuItem[4];
        List menuList = this.getFoxyMenu();
        int childAvail = 0;
        
        for (int i = 0; i < menuList.size() && i < foxyMenu.length; i ++) {
            Menu menu = (Menu) menuList.get(i);
            //System.out.println(menu.getMenuCode());
            foxyMenu[i] = new NavigationMenuItem(menu.getMenuName(), menu.getAction(), null, false);
            List childList = this.getFoxyChildMenu(menu.getMenuCode());
            childMenu = null;
            for (int j = 0; j < childList.size(); j ++) {
                Menu menuChild = (Menu) childList.get(j);
                if (this.ectx.isUserInRole(menuChild.getMenuCode()) || menuChild.getAction() == null) {
                    childMenu = new NavigationMenuItem(menuChild.getMenuName(), menuChild.getAction(),
                            clientUrl.getProtocol() + "://" + this.ectx.getRequestHeaderMap().get("host").toString() +
                            this.ectx.getRequestContextPath() + "/images/foxyBullet.gif", false);
                    //System.out.println(menu.getMenuCode() + "/" + menuChild.getMenuCode());
                    List subList = this.getFoxyChildMenu(menuChild.getMenuCode());
                    for (int k = 0; k < subList.size(); k ++) {
                        Menu menuSub = (Menu) subList.get(k);
                        if (this.ectx.isUserInRole(menuSub.getMenuCode()) || menuSub.getAction() == null) {
                            childAvail ++;
                            subMenu = new NavigationMenuItem(menuSub.getMenuName(), menuSub.getAction(),
                                    clientUrl.getProtocol() + "://" + this.ectx.getRequestHeaderMap().get("host").toString() +
                                    this.ectx.getRequestContextPath() + "/images/foxyBullet.gif", false);
                            //System.out.println(menuChild.getMenuCode() + "/" + menuSub.getMenuCode());
                            childMenu.add(subMenu);
                        }
                    }
                    if (menuChild.getAction() != null) {
                        foxyMenu[i].add(childMenu);
                    } else {
                        if (childAvail > 0) {
                            foxyMenu[i].add(childMenu);
                            childAvail = 0;
                        }
                    }
                }
            }
        }
    }
    
    public NavigationMenuItem[] getNavItems() {
        if (this.foxyMenu[0] instanceof org.apache.myfaces.custom.navmenu.NavigationMenuItem) {
        } else {
        }
        return (this.foxyMenu);
    }
    
    private List getFoxyMenu(){
        List menuList = null;
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            //menuList = session.createQuery("from Menu where parent = '0' order by menucode, parent").list();
            menuList = session.createQuery("from Menu where parent = '0' order by sequence").list();
            tx.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return menuList;
    }
    
    private List getFoxyChildMenu(String parentCode){
        List menuList = null;
        try {
            Session session = (Session) HibernateUtil.currentSession();
            Transaction tx= session.beginTransaction();
            menuList = session.createQuery("from Menu where parent = '" +
                    parentCode + "' order by sequence").list();
            tx.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return menuList;
    }
    
}
